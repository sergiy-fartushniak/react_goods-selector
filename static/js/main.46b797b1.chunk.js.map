{"version":3,"sources":["App.jsx","index.js"],"names":["goodsFromServer","App","state","selectedGoods","selecedProducts","length","join","addGood","good","setState","prevState","removeGood","filter","product","clearGoods","this","className","type","onClick","map","key","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAyFaC,E,4MArFbC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,gBAAkB,WAChB,IAAQD,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcE,QACpB,KAAK,EACH,MAAM,oBACR,KAAK,EACH,MAAM,GAAN,OAAUF,EAAc,GAAxB,gBACF,QACE,MAAM,GAAN,OAAUA,EAAcG,KAAK,MAA7B,mB,EAINC,QAAU,SAACC,GACT,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BP,cAAc,GAAD,mBAAMO,EAAUP,eAAhB,CAA+BK,S,EAIhDG,WAAa,SAACH,GACZ,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BP,cAAeO,EAAUP,cAAcS,QACrC,SAAAC,GAAO,OAAIA,IAAYL,U,EAK7BM,WAAa,WACX,EAAKL,SAAS,CAAEN,cAAe,M,4CAGjC,WAAU,IAAD,OACCA,EAAkBY,KAAKb,MAAvBC,cAER,OACE,yBAAKa,UAAU,OACb,sDACsBD,KAAKX,kBAD3B,KAEE,4BACEa,KAAK,SACLC,QAASH,KAAKD,WACdE,UAAWb,EAAcE,OACrB,cACA,uBALN,UAWF,wBAAIW,UAAU,QACXhB,EAAgBmB,KAAI,SAAAX,GAAI,OACvB,wBACEY,IAAKZ,EACLQ,UACEb,EAAckB,SAASb,GACnB,mBACA,YAGN,wCAAUA,EAAV,MACA,4BACES,KAAK,SACLC,QAAS,kBACPf,EAAckB,SAASb,GACnB,EAAKG,WAAWH,GAChB,EAAKD,QAAQC,IAEnBQ,UAAU,gBAETb,EAAckB,SAASb,GACpB,SACA,iB,GA5EFc,IAAMC,WCZxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.46b797b1.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: ['Jam'],\n  }\n\n  selecedProducts = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return `No goods selected`;\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n      default:\n        return `${selectedGoods.join(', ')} are selected`;\n    }\n  }\n\n  addGood = (good) => {\n    this.setState(prevState => ({\n      selectedGoods: [...prevState.selectedGoods, good],\n    }));\n  }\n\n  removeGood = (good) => {\n    this.setState(prevState => ({\n      selectedGoods: prevState.selectedGoods.filter(\n        product => product !== good,\n      ),\n    }));\n  }\n\n  clearGoods = () => {\n    this.setState({ selectedGoods: [] });\n  }\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {`Selected goods: ${this.selecedProducts()} `}\n          <button\n            type=\"button\"\n            onClick={this.clearGoods}\n            className={selectedGoods.length\n              ? 'clearButton'\n              : 'clearButton--active'\n            }\n          >\n            clear\n          </button>\n        </h1>\n        <ul className=\"list\">\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className={\n                selectedGoods.includes(good)\n                  ? 'selected--active'\n                  : 'selected'\n                }\n            >\n              <span>{`${good} `}</span>\n              <button\n                type=\"button\"\n                onClick={() => (\n                  selectedGoods.includes(good)\n                    ? this.removeGood(good)\n                    : this.addGood(good)\n                )}\n                className=\"selectButton\"\n              >\n                {selectedGoods.includes(good)\n                  ? 'Remove'\n                  : 'Add'}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}